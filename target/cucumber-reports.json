[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-12T19:23:10.843Z",
        "line": 4,
        "name": "As a user, I want to search for a term on google",
        "description": "",
        "id": "test-google-search-functionality;as-a-user--i-want-to-search-for-a-term-on-google",
        "after": [
          {
            "result": {
              "duration": 2021000,
              "status": "passed"
            },
            "match": {
              "location": "org.example.selenium.cucumber.steps.conf.Hooks.as(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6002314000,
              "status": "passed"
            },
            "line": 5,
            "name": "I am on the google homepage",
            "match": {
              "location": "org.example.selenium.cucumber.steps.GoogleSearchSteps.navigateToGoogle()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 521137000,
              "status": "passed"
            },
            "line": 6,
            "name": "I enter a search criteria",
            "match": {
              "location": "org.example.selenium.cucumber.steps.GoogleSearchSteps.enterSearchCriteria()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2420878000,
              "status": "passed"
            },
            "line": 7,
            "name": "click the search button",
            "match": {
              "location": "org.example.selenium.cucumber.steps.GoogleSearchSteps.clickSearchButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70837000,
              "status": "passed"
            },
            "line": 8,
            "name": "I should see the results of the search",
            "match": {
              "location": "org.example.selenium.cucumber.steps.GoogleSearchSteps.validateResults()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TestGoogleSearch"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      }
    ],
    "name": "Test google search functionality",
    "description": "",
    "id": "test-google-search-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/google_search.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-07-12T19:23:19.946Z",
        "line": 10,
        "name": "As a Test Engineer, I want to validate that a text is present inside a list.",
        "description": "",
        "id": "i-can-find-a-city-inside-a-state.;as-a-test-engineer--i-want-to-validate-that-a-text-is-present-inside-a-list.;;2",
        "after": [
          {
            "result": {
              "duration": 277000,
              "status": "passed"
            },
            "match": {
              "location": "org.example.selenium.cucumber.steps.conf.Hooks.as(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 510563000,
              "status": "passed"
            },
            "line": 5,
            "name": "I navigate to the list page",
            "match": {
              "location": "org.example.selenium.cucumber.steps.ListSteps.navigateToTheListPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1317976000,
              "status": "passed"
            },
            "line": 6,
            "name": "I search \u0027New York\u0027 in the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027New York\u0027",
                  "offset": 9
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.searchTheList(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 210305000,
              "status": "passed"
            },
            "line": 7,
            "name": "I can validate that \u0027Utica, New York\u0027 is present inside the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Utica, New York\u0027",
                  "offset": 20
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.findTheTextInTheList(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TestListOfCities"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-12T19:23:22.006Z",
        "line": 11,
        "name": "As a Test Engineer, I want to validate that a text is present inside a list.",
        "description": "",
        "id": "i-can-find-a-city-inside-a-state.;as-a-test-engineer--i-want-to-validate-that-a-text-is-present-inside-a-list.;;3",
        "after": [
          {
            "result": {
              "duration": 282000,
              "status": "passed"
            },
            "match": {
              "location": "org.example.selenium.cucumber.steps.conf.Hooks.as(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 47879000,
              "status": "passed"
            },
            "line": 5,
            "name": "I navigate to the list page",
            "match": {
              "location": "org.example.selenium.cucumber.steps.ListSteps.navigateToTheListPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1246910000,
              "status": "passed"
            },
            "line": 6,
            "name": "I search \u0027Texas\u0027 in the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Texas\u0027",
                  "offset": 9
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.searchTheList(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 858647000,
              "status": "passed"
            },
            "line": 7,
            "name": "I can validate that \u0027Dallas, Texas\u0027 is present inside the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Dallas, Texas\u0027",
                  "offset": 20
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.findTheTextInTheList(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TestListOfCities"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-12T19:23:24.169Z",
        "line": 12,
        "name": "As a Test Engineer, I want to validate that a text is present inside a list.",
        "description": "",
        "id": "i-can-find-a-city-inside-a-state.;as-a-test-engineer--i-want-to-validate-that-a-text-is-present-inside-a-list.;;4",
        "after": [
          {
            "result": {
              "duration": 260000,
              "status": "passed"
            },
            "match": {
              "location": "org.example.selenium.cucumber.steps.conf.Hooks.as(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 39826000,
              "status": "passed"
            },
            "line": 5,
            "name": "I navigate to the list page",
            "match": {
              "location": "org.example.selenium.cucumber.steps.ListSteps.navigateToTheListPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1171834000,
              "status": "passed"
            },
            "line": 6,
            "name": "I search \u0027Pennsylvania\u0027 in the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Pennsylvania\u0027",
                  "offset": 9
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.searchTheList(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 156176000,
              "status": "passed"
            },
            "line": 7,
            "name": "I can validate that \u0027Philadelphia, Pennsylvania\u0027 is present inside the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Philadelphia, Pennsylvania\u0027",
                  "offset": 20
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.findTheTextInTheList(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TestListOfCities"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-12T19:23:25.546Z",
        "line": 13,
        "name": "As a Test Engineer, I want to validate that a text is present inside a list.",
        "description": "",
        "id": "i-can-find-a-city-inside-a-state.;as-a-test-engineer--i-want-to-validate-that-a-text-is-present-inside-a-list.;;5",
        "after": [
          {
            "output": [
              "Scenario Failed!, going to take screenshot"
            ],
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png",
                "name": "The displayed error is: "
              }
            ],
            "result": {
              "duration": 295663000,
              "status": "passed"
            },
            "match": {
              "location": "org.example.selenium.cucumber.steps.conf.Hooks.as(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 35293000,
              "status": "passed"
            },
            "line": 5,
            "name": "I navigate to the list page",
            "match": {
              "location": "org.example.selenium.cucumber.steps.ListSteps.navigateToTheListPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1134121000,
              "status": "passed"
            },
            "line": 6,
            "name": "I search \u0027Bogota D.C.\u0027 in the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Bogota D.C.\u0027",
                  "offset": 9
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.searchTheList(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.Error: Text is not present in the list: FAILED!\n\tat org.example.selenium.cucumber.steps.ListSteps.findTheTextInTheList(ListSteps.java:32)\n\tat ✽.I can validate that \u0027Bogota D.C.\u0027 is present inside the list(file:///Users/CDIMAS/Projects%20VS%20code/ProjectUdemySeleniumCucumber/UdemySeleniumCucumber/src/test/resources/features/list_of_cities.feature:7)\n",
              "duration": 10024134000,
              "status": "failed"
            },
            "line": 7,
            "name": "I can validate that \u0027Bogota D.C.\u0027 is present inside the list",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Bogota D.C.\u0027",
                  "offset": 20
                }
              ],
              "location": "org.example.selenium.cucumber.steps.ListSteps.findTheTextInTheList(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TestListOfCities"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      }
    ],
    "name": "I can find a city inside a state.",
    "description": "",
    "id": "i-can-find-a-city-inside-a-state.",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/list_of_cities.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-07-12T19:23:37.051Z",
        "line": 10,
        "name": "As a Test Engineer, I want to retrieve the value of an static table.",
        "description": "",
        "id": ";as-a-test-engineer--i-want-to-retrieve-the-value-of-an-static-table.",
        "after": [
          {
            "result": {
              "duration": 314000,
              "status": "passed"
            },
            "match": {
              "location": "org.example.selenium.cucumber.steps.conf.Hooks.as(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3763950000,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to the static table",
            "match": {
              "location": "org.example.selenium.cucumber.steps.GridSteps.navigateToTheGridPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3418498000,
              "status": "passed"
            },
            "line": 11,
            "name": "I can return the value I wanted",
            "match": {
              "location": "org.example.selenium.cucumber.steps.GridSteps.returnValueOfTheTable()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TestStaticTable"
          },
          {
            "name": "@SmokeTest"
          }
        ]
      }
    ],
    "name": "Test different actions on a Static Table page.",
    "description": "",
    "id": "test-different-actions-on-a-static-table-page.",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/static_table.feature",
    "tags": [
      {
        "name": "@TestStaticTable",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]